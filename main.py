


python
import telebot import os
from telebot import types
import json
from datetime import datetime

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = "8032340002:AAHlXYZ8X6lU8tLNIOCUJU4p0GYuwU_jWKU"
bot = telebot.TeleBot(TOKEN)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ë–í–ò–ü (–±–∞–∑–æ–≤–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ –¥–ª—è –∏—Å—á–∏—Å–ª–µ–Ω–∏—è –ø–µ–Ω—Å–∏–π)
BVIP_DATA = {
    "2000-08": 2450, "2001-08": 3430, "2002-04": 3945, "2002-08": 4535,
    "2003-05": 5440, "2004-08": 6530, "2005-05": 7835, "2005-10": 9400,
    "2006-07": 10800, "2006-11": 12420, "2007-08": 15525, "2007-11": 17077.50,
    "2007-12": 18630, "2008-04": 20865, "2008-09": 25040, "2008-11": 26540,
    "2008-12": 28040, "2009-08": 33645, "2009-12": 37680, "2010-08": 45215,
    "2010-12": 49735, "2011-08": 57200, "2011-12": 62920, "2012-08": 72355,
    "2012-12": 79590, "2013-08": 85560, "2013-09": 91530, "2013-12": 93817.50,
    "2014-01": 96105, "2014-09": 107635, "2014-12": 113017.50, "2015-01": 118400,
    "2015-09": 130240, "2016-10": 149775, "2017-12": 172240, "2018-07": 178270,
    "2018-08": 184300, "2018-11": 202730, "2019-08": 223000, "2020-02": 238610,
    "2020-09": 262470, "2021-09": 289000, "2022-05": 324000, "2023-04": 347000,
    "2023-12": 372000, "2024-01": 428000, "2025-07": 471000
}

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
user_data = {}

def get_bvip_for_period(year, month):
    """–ü–æ–ª—É—á–∏—Ç—å –ë–í–ò–ü –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞"""
    key = f"{year}-{month:02d}"
    # –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à—É—é –¥–∞—Ç—É, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—â—É—é –∑–∞–¥–∞–Ω–Ω—É—é
    best_key = None
    for date_key in sorted(BVIP_DATA.keys()):
        if date_key <= key:
            best_key = date_key
        else:
            break
    return BVIP_DATA.get(best_key, 471000)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

def calculate_pension(salaries_data, total_experience):
    """–†–∞—Å—á—ë—Ç –ø–µ–Ω—Å–∏–∏ –ø–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É"""
    if len(salaries_data) != 60:
        return "–û—à–∏–±–∫–∞: –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ –∑–∞ 60 –º–µ—Å—è—Ü–µ–≤"
    
    # –°—Ä–µ–¥–Ω—è—è –ë–í–ò–ü –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥ (2025)
    avg_bvip_2025 = 471000
    
    # –†–∞—Å—á—ë—Ç –ò–ö–ó –∏ –ø–µ—Ä–µ—Å—á—ë—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–æ–≤
    recalculated_salaries = []
    
    for salary_info in salaries_data:
        salary = salary_info['salary']
        year = salary_info['year']
        month = salary_info['month']
        
        # –ü–æ–ª—É—á–∞–µ–º –ë–í–ò–ü –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
        bvip_period = get_bvip_for_period(year, month)
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ò–ö–ó
        ikz = salary / bvip_period
        
        # –ü–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫
        recalculated = ikz * avg_bvip_2025
        recalculated_salaries.append(recalculated)
    
    # –°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–π –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω–Ω—ã–π –¥–æ—Ö–æ–¥
    avg_income = sum(recalculated_salaries) / 60
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è (—Å 2024 –≥–æ–¥–∞ - –Ω–µ –±–æ–ª–µ–µ 12√ó–ë–í–ò–ü)
    max_income = 12 * avg_bvip_2025
    if avg_income > max_income:
        avg_income = max_income
    
    # –ë–∞–∑–æ–≤–∞—è –ø–µ–Ω—Å–∏—è - 55%
    base_pension = avg_income * 0.55
    
    # –ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ —Å—Ç–∞–∂ —Å–≤—ã—à–µ 25 –ª–µ—Ç (–¥–æ 80% –º–∞–∫—Å–∏–º—É–º)
    if total_experience > 25:
        extra_years = min(total_experience - 25, 25)  # –ú–∞–∫—Å–∏–º—É–º 25 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
        additional_percent = extra_years * 0.01
        base_pension = avg_income * (0.55 + additional_percent)
    
    return {
        'pension': round(base_pension, 2),
        'avg_income': round(avg_income, 2),
        'pension_percent': min(55 + max(0, total_experience - 25), 80)
    }

@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("üí∞ –†–∞—Å—á—ë—Ç –ø–µ–Ω—Å–∏–∏", "üßæ –ü–æ—Ä—è–¥–æ–∫ –≤—ã—Ö–æ–¥–∞")
    markup.row("üë§ –î–ª—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö", "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
    
    welcome_text = """
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç "–ú–æ—è –ø–µ–Ω—Å–∏—è UZ"!

–Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–∞–∑–º–µ—Ä –≤–∞—à–µ–π –±—É–¥—É—â–µ–π –ø–µ–Ω—Å–∏–∏ –ø–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –†–µ—Å–ø—É–±–ª–∏–∫–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω.

üìã –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á—ë—Ç –ø–µ–Ω—Å–∏–∏
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–µ–Ω—Å–∏–æ–Ω–Ω–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É  
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö
‚Ä¢ –ü–æ—Ä—è–¥–æ–∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–µ–Ω—Å–∏–∏

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é ‚¨áÔ∏è
    """
    
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "üí∞ –†–∞—Å—á—ë—Ç –ø–µ–Ω—Å–∏–∏")
def pension_calculation(message):
    user_id = message.chat.id
    user_data[user_id] = {'step': 'experience'}
    
    bot.send_message(user_id, 
        "üìä –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á—ë—Ç –ø–µ–Ω—Å–∏–∏!\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ–±—â–∏–π —Ç—Ä—É–¥–æ–≤–æ–π —Å—Ç–∞–∂ –≤ –≥–æ–¥–∞—Ö:\n"
        "(–Ω–∞–ø—Ä–∏–º–µ—Ä: 30)")

@bot.message_handler(func=lambda message: message.text == "üßæ –ü–æ—Ä—è–¥–æ–∫ –≤—ã—Ö–æ–¥–∞")
def retirement_procedure(message):
    procedure_text = """
üìã –ü–û–†–Ø–î–û–ö –í–´–•–û–î–ê –ù–ê –ü–ï–ù–°–ò–Æ

üë• –í–æ–∑—Ä–∞—Å—Ç –≤—ã—Ö–æ–¥–∞ –Ω–∞ –ø–µ–Ω—Å–∏—é:
‚Ä¢ –ú—É–∂—á–∏–Ω—ã: 60 –ª–µ—Ç
‚Ä¢ –ñ–µ–Ω—â–∏–Ω—ã: 55 –ª–µ—Ç

üìÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ç–∞–∂:
‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ–π –ø–µ–Ω—Å–∏–∏: 25 –ª–µ—Ç
‚Ä¢ –î–ª—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–µ–Ω—Å–∏–∏: –æ—Ç 7 –ª–µ—Ç

üìÑ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:
–£—Å–ª—É–≥–∞ –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω–∞—è

üè¢ –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è:
–£—Å–ª—É–≥–∞ –ø—Ä–æ–∞–∫—Ç–∏–≤–Ω–∞—è

üí∞ –†–∞–∑–º–µ—Ä –ø–µ–Ω—Å–∏–∏:
‚Ä¢ 55% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ +1% –∑–∞ –∫–∞–∂–¥—ã–π –≥–æ–¥ —Å—Ç–∞–∂–∞ —Å–≤—ã—à–µ 25 –ª–µ—Ç
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 80% –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞
    """
    
    bot.send_message(message.chat.id, procedure_text)

@bot.message_handler(func=lambda message: message.text == "üë§ –î–ª—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã—Ö")
def self_employed_info(message):
    self_employed_text = """
üë§ –ü–ï–ù–°–ò–Ø –î–õ–Ø –°–ê–ú–û–ó–ê–ù–Ø–¢–´–•

üíº –ö—Ç–æ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–∞–º–æ–∑–∞–Ω—è—Ç—ã–º:
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–∏
‚Ä¢ –§–∏–∑–∏—á–µ—Å–∫–∏–µ –ª–∏—Ü–∞, –∑–∞–Ω–∏–º–∞—é—â–∏–µ—Å—è —á–∞—Å—Ç–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π
‚Ä¢ –ê–¥–≤–æ–∫–∞—Ç—ã, –Ω–æ—Ç–∞—Ä–∏—É—Å—ã
‚Ä¢ –§–µ—Ä–º–µ—Ä—ã

üí∞ –†–∞–∑–º–µ—Ä –≤–∑–Ω–æ—Å–æ–≤:
‚Ä¢ –ú–∏–Ω–∏–º—É–º: 100% –æ—Ç –ë–†–í –≤ –≥–æ–¥
‚Ä¢ –ú–∞–∫—Å–∏–º—É–º: –¥–æ—Ö–æ–¥ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 8 √ó –ë–í–ò–ü –≤ –º–µ—Å—è—Ü (–¥–æ 2022)
‚Ä¢ 10 √ó –ë–í–ò–ü (2023), 12 √ó –ë–í–ò–ü (—Å 2024)
‚Ä¢ 1 –º–ª–Ω.–≤–∑–Ω–æ—Å–∞ —Ä–∞–≤–µ–Ω 8.3 –º–ª–Ω –¥–æ—Ö–æ–¥–∞
üìã –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
‚Ä¢ –î–æ–±—Ä–æ–≤–æ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É—á–∞—Å—Ç–∏—è
‚Ä¢ –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–∞—è —É–ø–ª–∞—Ç–∞ –≤–∑–Ω–æ—Å–æ–≤
‚Ä¢ –°—Ç–∞–∂ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π —É–ø–ª–∞—Ç–µ
‚Ä¢ –†–∞–∑–º–µ—Ä –ø–µ–Ω—Å–∏–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—É–º–º—ã –≤–∑–Ω–æ—Å–æ–≤

üìû –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—ã–π –æ—Ä–≥–∞–Ω –ø–µ–Ω—Å–∏–æ–Ω–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.
    """
    
    bot.send_message(message.chat.id, self_employed_text)

@bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞")
def help_info(message):
    help_text = """
‚ÑπÔ∏è –°–ü–†–ê–í–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø

üîç –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–Ω—è—Ç–∏—è:

üìä –ë–í–ò–ü - –ë–∞–∑–æ–≤–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ –¥–ª—è –∏—Å—á–∏—Å–ª–µ–Ω–∏—è –ø–µ–Ω—Å–∏–π
‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ–º
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç—Å—è
‚Ä¢ –¢–µ–∫—É—â–∏–π —Ä–∞–∑–º–µ—Ä: 471 000 —Å—É–º

üí° –ò–ö–ó - –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ –û—Ç–Ω–æ—à–µ–Ω–∏–µ –∑–∞—Ä–ø–ª–∞—Ç—ã –∫ –ë–í–ò–ü
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ—Å—á—ë—Ç–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞

üìà –§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á—ë—Ç–∞ –ø–µ–Ω—Å–∏–∏:
1. –ë–µ—Ä—É—Ç—Å—è –¥–æ—Ö–æ–¥—ã –∑–∞ –ª—é–±—ã–µ 5 –ª–µ—Ç –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10
2. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ò–ö–ó –∑–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü  
3. –î–æ—Ö–æ–¥—ã –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Ç–µ–∫—É—â—É—é –ë–í–ò–ü
4. –ü—Ä–∏–º–µ–Ω—è—é—Ç—Å—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –º–∞–∫—Å–∏–º—É–º—É
5. –ü–µ–Ω—Å–∏—è = 55% + —Å—Ç–∞–∂–µ–≤—ã–µ –Ω–∞–¥–±–∞–≤–∫–∏

‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã:
‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å—Ç–∞–∂: 7 –ª–µ—Ç
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø–µ–Ω—Å–∏–∏: 80%
‚Ä¢ –ü–µ—Ä–∏–æ–¥ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞: 60 –º–µ—Å—è—Ü–µ–≤ –ø–æ–¥—Ä—è–¥

üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @support (–µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã)
    """
    
    bot.send_message(message.chat.id, help_text)

@bot.message_handler(content_types=['text'])
def handle_text(message):
    user_id = message.chat.id
    
    if user_id in user_data:
        step = user_data[user_id].get('step')
        
        if step == 'experience':
            try:
                experience = int(message.text)
                if experience < 0 or experience > 50:
                    bot.send_message(user_id, "‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞–∂ (–æ—Ç 0 –¥–æ 50 –ª–µ—Ç)")
                    return
                
                user_data[user_id]['experience'] = experience
                user_data[user_id]['step'] = 'salary_period'
                
                bot.send_message(user_id,
                    "üìÖ –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∑–∞—Ä–ø–ª–∞—Ç.\n\n"
                    "–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—ã–π –≥–æ–¥ –∏ –º–µ—Å—è—Ü –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∑–∞—Ä–ø–ª–∞—Ç "
                    "(–ª—é–±—ã–µ 5 –ª–µ—Ç –ø–æ–¥—Ä—è–¥ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 10 –ª–µ—Ç —Ä–∞–±–æ—Ç—ã).\n\n"
                    "–§–æ—Ä–º–∞—Ç: YYYY-MM (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2019-01)")
                
            except ValueError:
                bot.send_message(user_id, "‚ùå –í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞–∂ —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25)")
        
        elif step == 'salary_period':
            try:
                year, month = message.text.split('-')
                year = int(year)
                month = int(month)
                
                if year < 2000 or year > 2025 or month < 1 or month > 12:
                    bot.send_message(user_id, "‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É (—Ñ–æ—Ä–º–∞—Ç: YYYY-MM)")
                    return
                
                user_data[user_id]['start_year'] = year
                user_data[user_id]['start_month'] = month
                user_data[user_id]['step'] = 'demo_calculation'
                
                # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–¥–µ–ª–∞–µ–º —É–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Ä–∞—Å—á—ë—Ç
                demo_calculation(user_id)
                
            except:
                bot.send_message(user_id, "‚ùå –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2020-01)")

def demo_calculation(user_id):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–∞—Å—á—ë—Ç —Å –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    experience = user_data[user_id]['experience']
    start_year = user_data[user_id]['start_year']
    start_month = user_data[user_id]['start_month']
    
    # –°–æ–∑–¥–∞—ë–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –∑–∞—Ä–ø–ª–∞—Ç (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—É–¥–µ—Ç –≤–≤–æ–¥–∏—Ç—å —Å–∞–º)
    demo_salaries = []
    base_salary = 5000000  # 5 –º–ª–Ω —Å—É–º –±–∞–∑–æ–≤–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ –¥–ª—è –¥–µ–º–æ
    
    for i in range(60):  # 60 –º–µ—Å—è—Ü–µ–≤
        month = start_month + i % 12
        year = start_year + i // 12
        if month > 12:
            month -= 12
            year += 1
        
        # –í–∞—Ä—å–∏—Ä—É–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
        salary = base_salary + (i * 50000)  # –†–æ—Å—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã
        
        demo_salaries.append({
            'salary': salary,
            'year': year,
            'month': month
        })
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–µ–Ω—Å–∏—é
    result = calculate_pension(demo_salaries, experience)
    
    result_text = f"""
üéâ –†–ï–ó–£–õ–¨–¢–ê–¢ –†–ê–°–ß–Å–¢–ê –ü–ï–ù–°–ò–ò

üë§ –¢—Ä—É–¥–æ–≤–æ–π —Å—Ç–∞–∂: {experience} –ª–µ—Ç
üìä –ü—Ä–æ—Ü–µ–Ω—Ç –ø–µ–Ω—Å–∏–∏: {result['pension_percent']}%
üí∞ –°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥: {result['avg_income']:,.0f} —Å—É–º
üèÜ –†–∞–∑–º–µ—Ä –ø–µ–Ω—Å–∏–∏: {result['pension']:,.0f} —Å—É–º

üìã –†–∞—Å—á—ë—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ:
‚Ä¢ –î–æ—Ö–æ–¥—ã –∑–∞ 60 –º–µ—Å—è—Ü–µ–≤ –Ω–∞—á–∏–Ω–∞—è —Å {start_year}-{start_month:02d}
‚Ä¢ –î–µ–π—Å—Ç–≤—É—é—â–µ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–£–∑
‚Ä¢ –¢–µ–∫—É—â–∞—è –ë–í–ò–ü: 471,000 —Å—É–º

‚ö†Ô∏è –≠—Ç–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç!
–î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á—ë—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–π –æ—Ä–≥–∞–Ω —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏ –æ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–æ—Ö–æ–¥–∞—Ö.

üí° –•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë —Ä–∞–∑? –ù–∞–∂–º–∏—Ç–µ "üí∞ –†–∞—Å—á—ë—Ç –ø–µ–Ω—Å–∏–∏"
    """
    
    # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    del user_data[user_id]
    
    bot.send_message(user_id, result_text)

if __name__ == '__main__':
    print("ü§ñ –ë–æ—Ç '–ú–æ—è –ø–µ–Ω—Å–∏—è UZ' –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True, interval=0,timeout=20)


